import { useState } from "react";
import { View, TextInput, Button, Text, Alert, StyleSheet, TouchableOpacity } from "react-native";
import { createUserWithEmailAndPassword } from "firebase/auth";
import { auth, db } from "../firebase/firebaseConfig";
import { setDoc, doc } from "firebase/firestore";

export default function RegisterScreen({ navigation }) {
  const [name, setName] = useState("");
  const [stdid, setStdid] = useState("");
  const [phone, setPhone] = useState("");
  const [email, setEmail] = useState("");
  const [imgUrl, setImgUrl] = useState("");
  const [password, setPassword] = useState("");

  const handleRegister = async () => {
    if (!name || !stdid || !phone || !email || !password) {
      Alert.alert("‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö");
      return;
    }
  
    try {
      const userCredential = await createUserWithEmailAndPassword(auth, email, password);
      const user = userCredential.user;
      console.log("‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à UID:", user.uid);
  
      await setDoc(doc(db, "users", user.uid), {
        uid: user.uid,
        name: name,
        stdid: stdid,
        email: email,
        phone: phone,
        imgUrl: imgUrl || "https://via.placeholder.com/150",
      });
  
      Alert.alert("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");
      navigation.navigate("Login");
    } catch (error) {
      Alert.alert("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", error.message);
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</Text>

      <TextInput style={styles.input} value={name} onChangeText={setName} placeholder="‡∏ä‡∏∑‡πà‡∏≠" />
      <TextInput style={styles.input} value={stdid} onChangeText={setStdid} placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤" keyboardType="numeric" />
      <TextInput style={styles.input} value={email} onChangeText={setEmail} placeholder="Email" keyboardType="email-address" />
      <TextInput style={styles.input} value={phone} onChangeText={setPhone} placeholder="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå" keyboardType="phone-pad" />
      <TextInput style={styles.input} value={imgUrl} onChangeText={setImgUrl} placeholder="URL ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)" />
      <TextInput style={styles.input} value={password} onChangeText={setPassword} placeholder="Password" secureTextEntry />

      <Button title="‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å" onPress={handleRegister} />

      {/* üîπ ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login */}
      <TouchableOpacity onPress={() => navigation.navigate("Login")}>
        <Text style={styles.loginText}>‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÅ‡∏•‡πâ‡∏ß? ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</Text>
      </TouchableOpacity>

    </View>
  );
}

// üîπ Styles
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: "bold",
    marginBottom: 20,
  },
  input: {
    width: "100%",
    height: 50,
    borderWidth: 1,
    borderColor: "#ccc",
    borderRadius: 8,
    paddingHorizontal: 15,
    marginBottom: 10,
  },
  loginText: {
    marginTop: 15,
    fontSize: 16,
    color: "#007bff",
    textDecorationLine: "underline",
  },
});
